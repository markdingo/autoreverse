AUTOREVERSE(8)              System Manager's Manual             AUTOREVERSE(8)

NNAAMMEE
     aauuttoorreevveerrssee - a minimalist-configuration reverse DNS name server

SSYYNNOOPPSSIISS
     aauuttoorreevveerrssee --hh | ----hheellpp | ----mmaannppaaggee | --vv | ----vveerrssiioonn
     aauuttoorreevveerrssee ----ffoorrwwaarrdd _z_o_n_e_-_n_a_m_e | ----llooccaall--ffoorrwwaarrdd _z_o_n_e_-_n_a_m_e
                 ----rreevveerrssee _C_I_D_R<?> | ----llooccaall--rreevveerrssee _C_I_D_R<?>
                 [----lliisstteenn _l_i_s_t_e_n_-_a_d_d_r_e_s_s]<?> [----PPTTRR--ddeedduuccee _U_R_L]<?>
                 [----ppaasssstthhrruu _a_u_t_h_-_s_e_r_v_e_r]
                 [----ssyynntthheessiizzee=_t_r_u_e] [----CCHHAAOOSS=_t_r_u_e] [----NNSSIIDD _h_o_s_t_i_d]
                 [----TTTTLL _t_i_m_e_._D_u_r_a_t_i_o_n_=_1_h]
                 [----uusseerr _u_s_e_r_-_n_a_m_e] [----ggrroouupp _g_r_o_u_p_-_n_a_m_e] [----cchhrroooott _p_a_t_h]
                 [----lloogg--ddeebbuugg] [----lloogg--mmaajjoorr=_t_r_u_e] [----lloogg--mmiinnoorr]
                 [----lloogg--qquueerriieess=_t_r_u_e] [----rreeppoorrtt _t_i_m_e_._D_u_r_a_t_i_o_n_=_1_h]

                 The `<?>' symbol indicates options which can be specified
                 multiple times.

DDEESSCCRRIIPPTTIIOONN
     aauuttoorreevveerrssee is a specialized authoritative DNS server whose goal is to
     make it as easy as possible to auto-answer reverse queries without ever
     requiring reverse zone files.  aauuttoorreevveerrssee synthesizes reverse answers
     and automatically derives PPTTRR answers from specified forward zones.
     Importantly, aauuttoorreevveerrssee automatically answers _f_o_r_w_a_r_d queries
     corresponding to the synthetic reverse answers, meeting the requirements
     of many remote services which insist on matching forward and reverse
     names.

     aauuttoorreevveerrssee is designed to run on residential gateway routers and servers
     behind NATs which acquire ISP-assigned addresses via DHCP or SLAAC, but
     it also runs on publicly accessible servers with static network
     configurations.

     On start-up, aauuttoorreevveerrssee extracts forward and reverse delegation details
     from the DNS to synthesize its `Zones of Authority'.  This approach to
     gleaning information from the DNS represents an over-arching philosophy
     of aauuttoorreevveerrssee in that it _n_e_v_e_r requires configuration material which
     duplicates that already present in the DNS. This approach is suggested in
     rfc8501, Section 2.5 [[RRFFCC88550011]].

     While aauuttoorreevveerrssee normally runs with pre-configured forward and reverse
     delegations in the global DNS, it also supports non-delegated rfc1918
     [[RRFFCC11991188]] and rfc4193 [[RRFFCC44119933]] addresses, otherwise known as private
     addresses or User Local addresses (UULLAAss).

     See _G_E_T_T_I_N_G _S_T_A_R_T_E_D for details on how to run aauuttoorreevveerrssee, but a typical
     invocation is:

           # autoreverse --forward autoreverse.example.net --reverse 2001:db8::/64

     Where `autoreverse.example.net' and
     `0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa' (the reverse zone for
     2001:db8::/64) are delegated to the aauuttoorreevveerrssee listening addresses(s).

     That's it! That's all that's needed to serve your reverse and matching
     forward queries.

   OOPPTTIIOONNSS
     Documentation Options are:

     --hh | ----hheellpp
             print command-line usage

     ----mmaannppaaggee
             print the raw mandoc text suitable for piping into mandoc(1).

     --vv | ----vveerrssiioonn
             print aauuttoorreevveerrssee version and origin URL

     Run-time Options are:

     ----CCHHAAOOSS [=false]
             Answer CCHHAAOOSS TTXXTT queries for version.bind, version.server,
             authors.bind, hostname.bind and id.server.  The default is ttrruuee.

     ----NNSSIIDD _h_o_s_t_i_d
             Respond to EEDDNNSS NNSSIIDD sub-option requests with the specified
             _h_o_s_t_i_d.  aauuttoorreevveerrssee manages the hexadecimal conversion
             implicitly so this option should be set as a regular string, e.g.
             `--NSID a.ns.example.net'.

     ----PPTTRR--ddeedduuccee _U_R_L
             The zone is loaded from the URL and scanned for address records
             to deduce PPTTRR answers in preference to synthetic answers.  This
             is a way of overlaying synthetic answers with zone data.

             Any PPTTRR RRRRss found in the zone are also loaded in preference to
             synthetic answers.  Supported URL schemes are: `file', `axfr',
             `http' and `https'.

             In all cases, address and PPTTRR records are only considered if they
             are in-bailiwick of ----rreevveerrssee or ----llooccaall--rreevveerrssee zones.

             CCNNAAMMEE RRRRss are resolved while loading zones, thus if a CNAME
             resolves to an in-bailiwick reverse address it's included as a
             preferred response to PTR queries. A classic use of this is when
             you have a CNAME to a RRIIPPEE Atlas probe such as:

                   myprobe.example.net. 600 IN CNAME
                   pxxxx.probes.atlas.ripe.net.

             in this case a reverse query of the probe address returns
             `myprobe.example.net'.

             The ----PPTTRR--ddeedduuccee URLs are loaded after ----cchhrroooott processing which
             means paths in `file' scheme URLs must be relative to the chroot
             directory.

             The reload strategy varies with the URL scheme: `file'
             periodically detects Date-Time-Modified changes while the other
             schemes rely on the SSOOAA `Refresh' value expiring.

             If any of the ----PPTTRR--ddeedduuccee URLs fail to load, the previous data
             for aallll zones is retained and the partially loaded new values are
             discarded.  If the initial load of any zone fails, aauuttoorreevveerrssee
             exits.  In other words, aauuttoorreevveerrssee continues to run with stale
             data, but does not start with missing data.

             Examples of syntactically valid ----PPTTRR--ddeedduuccee URLs:

                   axfr://a.ns.example.org/example.net
                   file:///etc/nsd/data/example.net.zone
                   https://www.example.com/example.org.txt

             The ----PPTTRR--ddeedduuccee option can be specified multiple times.

     ----TTTTLL _t_i_m_e_._D_u_r_a_t_i_o_n
             `Time To Live' for synthetic responses expressed in `go'
             ttiimmee..DDuurraattiioonn syntax.  The minimum value allowed is `1s' and the
             default is `1h'.

     ----cchhrroooott _P_a_t_h
             Reduce process privileges by issuing chroot(2) after ----lliisstteenn
             sockets have been established.

             In conjunction with ----uusseerr and ----ggrroouupp, this option restricts
             access to a subset of the file system.  aauuttoorreevveerrssee must start as
             root for this option to succeed.  The specified path must be an
             absolute path otherwise chroot(2) fails.

             There are caveats with ----cchhrroooott.  Once the chroot directory is
             set, aallll file access is relative to that directory.  This
             obviously affects `file' URLs given to ----PPTTRR--ddeedduuccee but it also
             potentially impacts name resolution which often relies on files
             such as //eettcc//rreessoollvv..ccoonnff.  In other words, if not properly
             established, ----cchhrroooott can cause name resolution to fail.

             aauuttoorreevveerrssee defers all zone loading and discovery until after
             process privileges are reduced so any problems with chroot and
             friends are exposed at start up.

     ----ffoorrwwaarrdd _D_o_m_a_i_n
             The forward zone to discover and serve.  Also used as the suffix
             domain in PPTTRR responses. This zone _m_u_s_t be delegated to an
             aauuttoorreevveerrssee listening address.

             aauuttoorreevveerrssee queries the DNS to extract delegation details for
             this zone from the parent zone.  If one of the zone name servers
             self-identifies, as determined by DNS Probing, the zone is
             accepted as a `Zone of Authority'.  If the zone does not self-
             identify, aauuttoorreevveerrssee exits.  Only one of ----ffoorrwwaarrdd or
             ----llooccaall--ffoorrwwaarrdd can be specified.

             aauuttoorreevveerrssee processes ----ffoorrwwaarrdd before ----rreevveerrssee which means
             reverse zones can refer to forward zone name servers and
             discovery will `just work' as aauuttoorreevveerrssee is in a position to
             answer forward zone queries.

             aauuttoorreevveerrssee synthesizes zone information from the delegation
             details.

     ----ggrroouupp _g_r_o_u_p_-_n_a_m_e
             Reduce privileges by issuing a setgid(2) after ----lliisstteenn sockets
             have been established.

             In conjunction with ----uusseerr and ----cchhrroooott, this option removes root
             privileges and restricts access to other system components.
             aauuttoorreevveerrssee must start as root for this option to succeed.

     ----lliisstteenn _l_i_s_t_e_n_-_a_d_d_r_e_s_s
             Address to listen on for DNS queries.  If just an IP address or
             host name is specified, aauuttoorreevveerrssee assumes the `domain' service
             (aka port 53).  A specific port can be provided with the usual
             `host:port', `v4address:port' or `[v6address]:port' syntax.

             However the port is determined, on most Unix-like systems,
             aauuttoorreevveerrssee normally needs to be started as root to listen on
             `privileged ports' such as port 53.  If started as root, it is
             highly recommended that the aauuttoorreevveerrssee invocation include the
             ----uusseerr, ----ggrroouupp and ----cchhrroooott options to reduce process privileges
             once the --lliisstteenn sockets have been established.

             aauuttoorreevveerrssee listens on both UUDDPP and TTCCPP networks for DDNNSS queries.
             The default is `:domain'.

             The ----lliisstteenn option can be specified multiple times.

     ----llooccaall--ffoorrwwaarrdd _D_o_m_a_i_n
             A local forward zone to serve as a `Zone of Authority'.  Unlike
             ----ffoorrwwaarrdd, no attempt is made to discover the delegation and
             self-identify the name server.  A skeletal SOA is created and
             aauuttoorreevveerrssee arbitrarily serves the domain and uses it as a suffix
             for synthetic PPTTRR generation.

             _D_o_m_a_i_n represents a zone which is not expected to be visible in
             the public DNS and is thus only visible locally where local
             resolvers are configured to direct such queries to aauuttoorreevveerrssee.

             Only one of ----ffoorrwwaarrdd or ----llooccaall--ffoorrwwaarrdd can be specified.

     ----llooccaall--rreevveerrssee _C_I_D_R
             CCIIDDRR of a local reverse zone to serve as a `Zone of Authority'.
             Intended for rfc1918 and rfc4193 addresses otherwise known as
             private addresses or Unique Local Addresses in iippvv66 parlance.
             Unlike ----rreevveerrssee no attempt is made to discover the delegation
             and self-identify the name server.  A skeletal SOA is created and
             aauuttoorreevveerrssee arbitrarily serves the reverse domain.

             The CCIIDDRR represents a zone which is not expected to be visible in
             the public DNS and is thus only visible locally where local
             resolvers are configured to direct reverse queries to
             aauuttoorreevveerrssee.  How this redirection is achieved varies greatly
             depending on the local resolver.

             As one example, in the case of unbound(8), the normal approach is
             to use a `stub-zone' directive such as:

                   stub-zone:
                           name: "0.0.0.0.0.0.0.0.0.e.d.2.d.f.ip6.arpa."
                           stub-host: autoreverse.example.net.
                           stub-prime: yes

             Which directs uunnbboouunndd to resolve all addresses within the UULLAA
             CCIIDDRR of fd2d:e000::/48 by querying `autoreverse.example.net'.

             The ----llooccaall--rreevveerrssee option can be specified multiple times.

     ----lloogg--mmaajjoorr [=false]
             Log major events to Stdout.  Major events are rare events which
             are something you normally want to know about.  The default is
             ttrruuee.

             Most major events are start-up related, although there are some
             on-going major events such as periodic statistics report.  There
             is no good reason to set ----lloogg--mmaajjoorr to false unless you absolute
             cannot tolerate _a_n_y logging information at all.

     ----lloogg--mmiinnoorr [=true]
             Log minor events to Stdout.  Minor events are an elaboration of
             major events logged by ----lloogg--mmaajjoorr which provide additional
             insights behind the event.  Generally minor event logging is
             useful when you're trying to diagnose an unexpected major event.
             Setting ----lloogg--mmiinnoorr implies setting ----lloogg--mmaajjoorr.  The default is
             ffaallssee.

     --lloogg--ddeebbuugg [=true]
             Log extensive diagnostic material - mostly discovery related.
             Most likely of use to developers or sysadmins who are prepared to
             correlate log details with source code to evaluate the behaviour
             of aauuttoorreevveerrssee.  Setting ----lloogg--ddeebbuugg implies setting ----lloogg--mmaajjoorr
             and ----lloogg--mmiinnoorr.

     ----lloogg--qquueerriieess
             Write a one line summary of each query to Stdout.  The output is
             intended to be amenable to programmatic post-processing and
             statistics gathering, but still somewhat human-friendly.  On busy
             systems this option should probably be set to ffaallssee unless you
             wish to generate voluminous log files.  This setting can be
             toggled at run-time with SSIIGGUUSSRR22 if you wish to gather a snapshot
             of activity.  The default is ttrruuee.

     ----mmaaxx--aannsswweerrss _I_n_t_e_g_e_r
             Maximum PPTTRRss to allow in a response.  This further limits
             response sizes below the maximum allowed by the query and system
             defaults.

             This limit only applies to potential multiple PPTTRRss extracted from
             ----PPTTRR--ddeedduuccee zones.  Regardless of this setting, responses are
             aallwwaayyss limited to the maximum size allowed by the query including
             any EDNS0 values.  If set to zero, all available PPTTRRss are placed
             in the response within size limits.

             The default is 55.

     ----ppaasssstthhrruu _a_u_t_h_-_s_e_r_v_e_r
             Proxy out-of-bailiwick Class `IN' queries to the _a_u_t_h_-_s_e_r_v_e_r.

             TTHHIISS IISS AANN EEXXPPEERRIIMMEENNTTAALL FFEEAATTUURREE -- UUSSEE WWIITTHH CCAAUUTTIIOONN..

             Normally out-of-bailiwick queries generated a RREEFFUUSSEEDD DNS
             response.  However, with this option set, out-of-bailiwick
             ClassINET queries are proxied unmodified to the _a_u_t_h_-_s_e_r_v_e_r using
             the same network type the query came in, i.e.  UUDDPP or TTCCPP.  Any
             response from the _a_u_t_h_-_s_e_r_v_e_r is similarly proxied unmodified
             back to the querying client.  No retries are attempted, nor are
             truncated UDP responses re-queried in TTCCPP.  In effect,
             aauuttoorreevveerrssee acts as a transparent DNS proxy.

             This option is most likely of use in NAT/port-forwarding
             scenarios where a local authority server is already running on
             port 53 on a single routable IIPPvv44 address.

     ----rreeppoorrtt _t_i_m_e_._D_u_r_a_t_i_o_n
             Interval between printing statistics reports expressed in `go'
             ttiimmee..DDuurraattiioonn syntax.  The minimum value is 1s and the default is
             11hh.

     ----rreevveerrssee _C_I_D_R
             Defines the starting point within the reverse zone to discover
             and serve.

             aauuttoorreevveerrssee ascends the reverse DNS tree from the starting point
             to discover the zone delegated to aauuttoorreevveerrssee as determined by
             DNS Probing.  If the zone cannot be verified by probing,
             aauuttoorreevveerrssee exits.

             aauuttoorreevveerrssee processes ----rreevveerrssee _a_f_t_e_r ----ffoorrwwaarrdd which means
             reverse delegations can refer to in-bailiwick forward name
             servers and aauuttoorreevveerrssee correctly responds to SOA related queries
             as part of the reverse discovery.

             aauuttoorreevveerrssee synthesizes zone information from the discovered
             delegation details.

             The ----rreevveerrssee option can be specified multiple times.

     ----ssyynntthheessiizzee [=false]
             Synthesize missing PPTTRRss.

             If a PPTTRR query cannot be satisfied from --PPTTRR--ddeedduuccee zones, a
             synthetic response is generated based on the domain name of the
             forward zone.  If set false NNXXDDoommaaiinn is returned for missing
             PPTTRRss.  The default is ttrruuee.

     ----uusseerr _u_s_e_r_-_n_a_m_e
             Reduce privileges by issuing a setuid(2) after ----lliisstteenn sockets
             have been established.  In conjunction with ----ggrroouupp and ----cchhrroooott,
             this option removes root privileges and restricts access to other
             system components.  aauuttoorreevveerrssee must start as root for this
             option to succeed.

   SSIIGGNNAALLSS
     aauuttoorreevveerrssee responds to the following signals:

           SIGHUP        Reload all zones specified with ----PPTTRR--ddeedduuccee
           SIGQUIT       Produce a stack dump and exit
           SIGTERM       Initiate shutdown
           SIGUSR1       Generates an immediate statistics report
           SIGUSR2       Toggles ----lloogg--qquueerriieess

GGEETTTTIINNGG SSTTAARRTTEEDD
     Since aauuttoorreevveerrssee relies on the forward and reverse delegation details to
     deduce its own zone information, the first step is to add those
     delegation details into the global DNS.  Here is an example of the
     recommended snippet for your forward zone:

           $ORIGIN yourdomain.
           ;;
           autoreverse IN NS   autoreverse
                       IN AAAA 2001:db8:aa:bb::53
                       IN A    192.0.2.53
           ;;

     Reverse delegation is typically managed by your ISP or address assignment
     provider so normally you arrange with them to configure the reverse name
     server as: `autoreverse.yourdomain' to match the `NS' entry in the above
     snippet.

     That completes the setup for aauuttoorreevveerrssee.  It is now ready to run!

   IINNVVOOCCAATTIIOONN
     With forward and reverse delegations in place, the simplest invocation is
     to run aauuttoorreevveerrssee with a single ----ffoorrwwaarrdd and ----rreevveerrssee option:

           # autoreverse --forward autoreverse.yourdomain
           --reverse 2001:db8:23::/64

     With that information aauuttoorreevveerrssee walks and probes the global DNS to
     glean delegation details to create its ZZoonneess ooff AAuutthhoorriittyy to serve.

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
     aauuttoorreevveerrssee starts at one label up from the --ffoorrwwaarrdd and --rreevveerrssee zones
     and directly queries the parent name servers for delegation details of
     the specified zone to populate its `Zones of Authority'.  aauuttoorreevveerrssee
     continues `walking' up the DNS until it finds responding parents or
     reaches the upper reaches of the DNS.  This `walking' process is
     important because there are (uncommonly) gaps between child and parent
     zones in the forward direction, while such gaps are very common in the
     reverse direction.  `Walking' skips over those gaps to discover the
     delegation material.

     Once the parents are discovered, aauuttoorreevveerrssee directly queries them for
     name servers of the delegated ----ffoorrwwaarrdd and ----rreevveerrssee zones.  These
     purported delegated name servers are _D_N_S _P_r_o_b_e_d to determine if any of
     them refer back to the aauuttoorreevveerrssee instance.  If at least one does,
     aauuttoorreevveerrssee accepts the domain as a `Zone of Authority' which it will
     server answers for.

     This is a convoluted way of saying that aauuttoorreevveerrssee determines if it is
     one of the delegated name servers.  You might think that aauuttoorreevveerrssee
     could simply compare interface addresses against the delegation details
     and accept a match as `proof', but that doesn't work in a proxy or port
     forwarding or NAT environment.  Thus aauuttoorreevveerrssee relies on the stronger
     proof of a _D_N_S _P_r_o_b_e.

   PPTTRR AANNDD FFOORRWWAARRDD SSYYNNTTHHEESSIISS
     aauuttoorreevveerrssee answers PPTTRR queries for in-bailiwick zones with synthetic and
     matching forward names.  For example a PPTTRR query might produce the
     following response:

           f.7.1.f.0.d. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60
           IN PTR 2001-db8-0-0-0-0-d0-d17f.autoreverse.yourdomain.
     or
           54.2.0.192.in-addr.arpa. 60
           IN PTR 192-0-2-54.autoreverse.yourdomain.

     and aauuttoorreevveerrssee answers forward queries for these synthetic PPTTRR values
     with matching address records, i.e.:

           2001-db8-0-0-0-0-d0-d17f.autoreverse.yourdomain. 60
           IN AAAA 2001:db8::d0:d17f
     and
           192-0-2-54.autoreverse.yourdomain. 60 IN A 192.0.2.54

     This automatic forward and reverse matching is perhaps the main reason
     for deploying aauuttoorreevveerrssee as it helps meet the requirements of many
     logging and checking systems which insist on matching entries; sshd(8)
     and dovecot(1) IMAP and POP3 servers being prominent examples.

   IINNTTEERRMMIIXXIINNGG
     A common scenario is where you want to intermix configured names with
     synthetic names in PPTTRR responses.  This is the purpose of --PPTTRR--ddeedduuccee.
     aauuttoorreevveerrssee loads the nominated zones and deduces PPTTRR RRRRss for every AA,
     AAAAAAAA and CCNNAAMMEE resource found.  It also directly loads any PPTTRR RRRRss in the
     zone.  These deduced and direct PPTTRRss have preference over synthetic PPTTRRss.
     For example, if you supply a forward zone which contains:

             $ORIGIN otherdomain.
             router IN AAAA 2001:db8::1
             s1     IN AAAA 2001:db8::2
             mail   IN AAAA 2001:db8::5

     aauuttoorreevveerrssee replies to the following PPTTRR queries with:

             1.0.0. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60 IN PTR router.otherdomain.
             2.0.0. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60 IN PTR s1.otherdomain.
             3.0.0. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60 IN PTR 2001-db8-0-0-0-0-0-3.autoreverse.yourdomain.
             4.0.0. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60 IN PTR 2001-db8-0-0-0-0-0-4.autoreverse.yourdomain.
             5.0.0. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60 IN PTR mail.otherdomain.
             6.0.0. ... 8.b.d.0.1.0.0.2.ip6.arpa. 60 IN PTR 2001-db8-0-0-0-0-0-6.autoreverse.yourdomain.
             ...

EEXXAAMMPPLLEESS
     Few use-cases require such a complicated invocation, but this example
     demonstrates less common features:

           # autoreverse --forward autoreverse.mydomain --reverse 2001:db8::/64
                          --log-query=false --NSID Host:`hostname` --CHAOS=false
                          --user nobody --group nobody --chroot /tmp
                          --listen 192.0.2.1 --listen [2001:db8::1]:53
                          --passthru 127.0.0.1
                          --PTR-deduce file:///etc/nsd/data/example.net.zone
                          --PTR-deduce file:///etc/nsd/data/8.b.d.0.1.0.0.2.ip6.arpa
                          --PTR-deduce axfr://a.ns.example.org/example.net

     which causes aauuttoorreevveerrssee to listen on multiple addresses, deduces reverse
     PPTTRR names from multiple zone URLs and relinquishes root permissions to
     run as a less-privileged daemon.

     This invocation also supplies the hostname in response to any query
     containing the NSID option.  Finally, out-of-bailiwick queries are passed
     thru to a name server presumed to be listening on 127.0.0.1 which allows
     aauuttoorreevveerrssee to proxy or answer all inbound Class IN DNS queries.

PPEERRFFOORRMMAANNCCEE
     While aauuttoorreevveerrssee is not particularly designed with performance in mind,
     it is interesting to note the performance and concurrency impact of a ggoo
     [[ggoollaanngg]] implementation.  A number of tests were run with dnsperf(1)
     [[ddnnss--ooaarrcc]] to inject 4,000,000 random queries while simulating 20
     concurrent clients.  This table shows the average results across multiple
     runs:

           PPllaattffoorrmm            OOSS                  QQuueerriieess//ss        MMeemmoorryy
           Pi4 (arm64)         FreeBSD 13.0        18,112           17MB
           i5-6260U (x64)      Debian 5.10         82,211           18MB

     Since dnsperf(1) was run on the _s_a_m_e system, exchanging queries via
     loopback, these results should be viewed as indicative rather than
     definitive.  aauuttoorreevveerrssee was run with ----lloogg--qquueerriieess==ffaallssee during these
     tests but it was otherwise a normal invocation.

SSEEEE AALLSSOO
           autoreverse    Project Home Page        https://github.com/markdingo/autoreverse
           [dns-oarc]     dnsperf                  https://www.dns-oarc.net/tools/dnsperf
           [golang]       The go language          https://go.dev
           [RFC1918]      ipv4 Private Addresses   https://datatracker.ietf.org/doc/html/rfc1918
           [RFC4193]      ipv6 Private Addresses   https://datatracker.ietf.org/doc/html/rfc4193
           [RFC7873]      DNS Cookies              https://datatracker.ietf.org/doc/html/rfc7873
           [RFC8501]      Reverse DNS in IPv6      https://datatracker.ietf.org/doc/html/rfc8501#section-2.5

FFUUTTUURREE
   ----ccaacchhee--ddiirreeccttoorryy _p_a_t_h
     Relying on access to the global DNS during start-up may cause
     difficulties in some environments (though if connectivity is a problem,
     inbound queries are unlikely to arrive anyway...).

     In such cases it may be sensible for aauuttoorreevveerrssee to cache delegation
     material and ----PPTTRR--ddeedduuccee zones to use as a fallback during start-up if
     current information is inaccessible.  Cache information could be
     refreshed when fetched and deleted if the source authoritatively says it
     no longer exists.

HHIISSTTOORRYY
     First released in late 2021, aauuttoorreevveerrssee development was triggered by a
     local ISP (ABB) offering free _s_t_a_t_i_c /48 iippvv66 allocations.  Importantly,
     they also supported free reverse delegation to home and small business
     accounts which is where aauuttoorreevveerrssee comes in handy.

BBUUGGSS
     aauuttoorreevveerrssee has no clue about DDNNSSSSEECC.

     aauuttoorreevveerrssee has no clue about DDNNSS CCooookkiieess [[RRFFCC77887733]] and Mr DNS suggests
     that that makes aauuttoorreevveerrssee an `outdated platform'.  To offer some
     appeasement, the periodic statistics report includes counts of queries
     with a DDNNSS CCooookkiiee option to see just how much traction they really have.
     Look for the `cookie=n' on the `Stats: Total' line. If Mr DNS proves
     right, as he invariably does, then we'll add cookie support. Please
     report back to the project if you get significant queries with cookies -
     or not.

     As always, any bugs or feedback should be directed to the project page at
     https://github.com/markdingo/autoreverse


macOS 12.0                     December 12, 2021                    macOS 12.0
